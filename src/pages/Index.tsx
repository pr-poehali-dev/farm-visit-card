import { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';

const Index = () => {
  const [cart, setCart] = useState<{[key: string]: number}>({});
  const [showOrderForm, setShowOrderForm] = useState(false);
  const [orderForm, setOrderForm] = useState({
    name: '',
    phone: '',
    address: '',
    comment: ''
  });

  const products = [
    {
      id: 'chicken-eggs',
      name: '–Ø–π—Ü–æ –∫—É—Ä–∏–Ω–æ–µ',
      price: 80,
      unit: '–¥–µ—Å—è—Ç–æ–∫',
      description: '–°–≤–µ–∂–∏–µ –¥–æ–º–∞—à–Ω–∏–µ –∫—É—Ä–∏–Ω—ã–µ —è–π—Ü–∞ –æ—Ç –∫—É—Ä —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –≤—ã–≥—É–ª–∞',
      icon: 'Egg'
    },
    {
      id: 'quail-eggs',
      name: '–Ø–π—Ü–æ –ø–µ—Ä–µ–ø–µ–ª–∏–Ω–æ–µ',
      price: 120,
      unit: '20 —à—Ç',
      description: '–î–∏–µ—Ç–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–µ–ø–µ–ª–∏–Ω—ã–µ —è–π—Ü–∞, –±–æ–≥–∞—Ç—ã–µ –≤–∏—Ç–∞–º–∏–Ω–∞–º–∏',
      icon: 'Egg'
    },
    {
      id: 'duck-meat',
      name: '–ú—è—Å–æ —É—Ç–æ–∫',
      price: 450,
      unit: '–∫–≥',
      description: '–ù–µ–∂–Ω–æ–µ –º—è—Å–æ –¥–æ–º–∞—à–Ω–∏—Ö —É—Ç–æ–∫, –≤—ã—Ä–∞—â–µ–Ω–Ω—ã—Ö –Ω–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö –∫–æ—Ä–º–∞—Ö',
      icon: 'Bird'
    },
    {
      id: 'berry-juice',
      name: '–ú–æ—Ä—Å—ã —è–≥–æ–¥–Ω—ã–µ',
      price: 150,
      unit: '1–ª',
      description: '–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ –º–æ—Ä—Å—ã –∏–∑ –ª–µ—Å–Ω—ã—Ö —è–≥–æ–¥ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–±–æ—Ä–∞',
      icon: 'Grape'
    },
    {
      id: 'mushrooms',
      name: '–ì—Ä–∏–±—ã –ª–µ—Å–Ω—ã–µ',
      price: 200,
      unit: '–∫–≥',
      description: '–°–≤–µ–∂–∏–µ –ª–µ—Å–Ω—ã–µ –≥—Ä–∏–±—ã: –±–µ–ª—ã–µ, –ø–æ–¥–æ—Å–∏–Ω–æ–≤–∏–∫–∏, –ª–∏—Å–∏—á–∫–∏',
      icon: 'TreePine'
    }
  ];

  const reviews = [
    {
      name: '–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–Ω–∞',
      text: '–ü–æ–∫—É–ø–∞—é —è–π—Ü–∞ —É–∂–µ –ø–æ–ª–≥–æ–¥–∞. –û—á–µ–Ω—å —Å–≤–µ–∂–∏–µ, –∂–µ–ª—Ç–æ–∫ —è—Ä–∫–æ-–∂–µ–ª—Ç—ã–π! –ö–∞—á–µ—Å—Ç–≤–æ –æ—Ç–ª–∏—á–Ω–æ–µ.',
      rating: 5
    },
    {
      name: '–ê–ª–µ–∫—Å–µ–π –ü.',
      text: '–£—Ç—è—Ç–∏–Ω–∞ –ø—Ä–æ—Å—Ç–æ —Ç–∞–µ—Ç –≤–æ —Ä—Ç—É. –í–∏–¥–Ω–æ, —á—Ç–æ –ø—Ç–∏—Ü–∞ —Ä–æ—Å–ª–∞ –≤ —Ö–æ—Ä–æ—à–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö. –†–µ–∫–æ–º–µ–Ω–¥—É—é!',
      rating: 5
    },
    {
      name: '–ï–ª–µ–Ω–∞ –°.',
      text: '–ú–æ—Ä—Å—ã –æ—á–µ–Ω—å –≤–∫—É—Å–Ω—ã–µ, –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ. –î–µ—Ç–∏ –ø—å—é—Ç —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º. –°–ø–∞—Å–∏–±–æ –∑–∞ –∫–∞—á–µ—Å—Ç–≤–æ!',
      rating: 5
    }
  ];

  const addToCart = (productId: string) => {
    setCart(prev => ({
      ...prev,
      [productId]: (prev[productId] || 0) + 1
    }));
  };

  const removeFromCart = (productId: string) => {
    setCart(prev => {
      const newCart = { ...prev };
      if (newCart[productId] > 1) {
        newCart[productId]--;
      } else {
        delete newCart[productId];
      }
      return newCart;
    });
  };

  const getTotalPrice = () => {
    return Object.entries(cart).reduce((total, [productId, quantity]) => {
      const product = products.find(p => p.id === productId);
      return total + (product ? product.price * quantity : 0);
    }, 0);
  };

  const getCartItemsCount = () => {
    return Object.values(cart).reduce((sum, count) => sum + count, 0);
  };

  const handleOrderSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    alert('–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
    setCart({});
    setShowOrderForm(false);
    setOrderForm({ name: '', phone: '', address: '', comment: '' });
  };

  return (
    <div className="min-h-screen bg-background">
      {/* Header */}
      <header className="bg-primary text-primary-foreground py-6 px-4">
        <div className="max-w-6xl mx-auto">
          <div className="flex justify-between items-center">
            <div>
              <h1 className="text-3xl font-bold mb-2">–§–µ—Ä–º–µ—Ä—Å–∫–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ "–†—É—Å—Å–∫–∏–µ —Ç—Ä–∞–¥–∏—Ü–∏–∏"</h1>
              <p className="text-lg opacity-90">–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã —Å –¥—É—à–æ–π</p>
            </div>
            <div className="relative">
              <Button 
                onClick={() => setShowOrderForm(!showOrderForm)}
                className="bg-secondary text-secondary-foreground hover:bg-secondary/90"
              >
                <Icon name="ShoppingCart" size={20} />
                <span className="ml-2">–ö–æ—Ä–∑–∏–Ω–∞ ({getCartItemsCount()})</span>
                {getTotalPrice() > 0 && (
                  <Badge className="ml-2 bg-farm-brown text-white">
                    {getTotalPrice()}‚ÇΩ
                  </Badge>
                )}
              </Button>
            </div>
          </div>
        </div>
      </header>

      {/* Hero Section */}
      <section className="py-16 px-4 bg-gradient-to-br from-farm-beige via-background to-farm-beige">
        <div className="max-w-6xl mx-auto text-center">
          <h2 className="text-4xl font-bold mb-6 text-primary">
            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –Ω–∞—à—É —Ñ–µ—Ä–º—É! üåæ
          </h2>
          <p className="text-xl text-muted-foreground mb-8 max-w-3xl mx-auto">
            –ú—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è —Ä–∞–∑–≤–µ–¥–µ–Ω–∏–µ–º –¥–æ–º–∞—à–Ω–µ–π –ø—Ç–∏—Ü—ã –∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ–º —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ —á–∏—Å—Ç—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ 
            —É–∂–µ –±–æ–ª–µ–µ 15 –ª–µ—Ç. –ù–∞—à–∏ –∫—É—Ä—ã, —É—Ç–∫–∏ –∏ –ø–µ—Ä–µ–ø–µ–ª–∞ —Ä–∞—Å—Ç—É—Ç –≤ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö, 
            —á—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –≤—ã—Å–æ—á–∞–π—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ü–∏–∏.
          </p>
          <div className="flex justify-center space-x-8 text-primary">
            <div className="text-center">
              <Icon name="Egg" size={48} />
              <p className="mt-2 font-semibold">–°–≤–µ–∂–∏–µ —è–π—Ü–∞</p>
            </div>
            <div className="text-center">
              <Icon name="Bird" size={48} />
              <p className="mt-2 font-semibold">–î–æ–º–∞—à–Ω—è—è –ø—Ç–∏—Ü–∞</p>
            </div>
            <div className="text-center">
              <Icon name="TreePine" size={48} />
              <p className="mt-2 font-semibold">–õ–µ—Å–Ω—ã–µ –≥—Ä–∏–±—ã</p>
            </div>
          </div>
        </div>
      </section>

      {/* Products Section */}
      <section className="py-16 px-4">
        <div className="max-w-6xl mx-auto">
          <h2 className="text-3xl font-bold text-center mb-12 text-primary">
            –ù–∞—à–∞ –ø—Ä–æ–¥—É–∫—Ü–∏—è
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {products.map((product) => (
              <Card key={product.id} className="hover:shadow-lg transition-shadow">
                <CardHeader className="text-center">
                  <div className="mx-auto mb-4 text-primary">
                    <Icon name={product.icon} size={48} />
                  </div>
                  <CardTitle className="text-xl">{product.name}</CardTitle>
                  <div className="text-2xl font-bold text-primary">
                    {product.price}‚ÇΩ
                    <span className="text-sm text-muted-foreground font-normal">
                      /{product.unit}
                    </span>
                  </div>
                </CardHeader>
                <CardContent>
                  <p className="text-muted-foreground mb-4 text-center">
                    {product.description}
                  </p>
                  <div className="flex justify-center space-x-2">
                    {cart[product.id] && (
                      <>
                        <Button
                          variant="outline"
                          size="sm"
                          onClick={() => removeFromCart(product.id)}
                        >
                          -
                        </Button>
                        <span className="px-3 py-1 bg-muted rounded text-center min-w-[2rem]">
                          {cart[product.id]}
                        </span>
                      </>
                    )}
                    <Button
                      onClick={() => addToCart(product.id)}
                      className="bg-primary hover:bg-primary/90"
                    >
                      {cart[product.id] ? '+' : '–í –∫–æ—Ä–∑–∏–Ω—É'}
                    </Button>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Order Form */}
      {showOrderForm && getCartItemsCount() > 0 && (
        <section className="py-16 px-4 bg-muted">
          <div className="max-w-2xl mx-auto">
            <Card>
              <CardHeader>
                <CardTitle className="text-2xl text-center">–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="mb-6">
                  <h3 className="font-semibold mb-4">–í–∞—à –∑–∞–∫–∞–∑:</h3>
                  {Object.entries(cart).map(([productId, quantity]) => {
                    const product = products.find(p => p.id === productId);
                    if (!product) return null;
                    return (
                      <div key={productId} className="flex justify-between items-center py-2">
                        <span>{product.name} √ó {quantity}</span>
                        <span className="font-semibold">{product.price * quantity}‚ÇΩ</span>
                      </div>
                    );
                  })}
                  <div className="border-t pt-2 mt-4">
                    <div className="flex justify-between items-center font-bold text-lg">
                      <span>–ò—Ç–æ–≥–æ:</span>
                      <span>{getTotalPrice()}‚ÇΩ</span>
                    </div>
                  </div>
                </div>

                <form onSubmit={handleOrderSubmit} className="space-y-4">
                  <div>
                    <label className="block text-sm font-medium mb-1">–ò–º—è *</label>
                    <Input
                      required
                      value={orderForm.name}
                      onChange={(e) => setOrderForm(prev => ({ ...prev, name: e.target.value }))}
                      placeholder="–í–∞—à–µ –∏–º—è"
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium mb-1">–¢–µ–ª–µ—Ñ–æ–Ω *</label>
                    <Input
                      required
                      type="tel"
                      value={orderForm.phone}
                      onChange={(e) => setOrderForm(prev => ({ ...prev, phone: e.target.value }))}
                      placeholder="+7 (XXX) XXX-XX-XX"
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium mb-1">–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ *</label>
                    <Input
                      required
                      value={orderForm.address}
                      onChange={(e) => setOrderForm(prev => ({ ...prev, address: e.target.value }))}
                      placeholder="–ê–¥—Ä–µ—Å –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏"
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium mb-1">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</label>
                    <Textarea
                      value={orderForm.comment}
                      onChange={(e) => setOrderForm(prev => ({ ...prev, comment: e.target.value }))}
                      placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è"
                      rows={3}
                    />
                  </div>
                  <div className="flex space-x-4">
                    <Button type="submit" className="flex-1 bg-primary hover:bg-primary/90">
                      –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
                    </Button>
                    <Button 
                      type="button"
                      variant="outline"
                      onClick={() => setShowOrderForm(false)}
                    >
                      –û—Ç–º–µ–Ω–∞
                    </Button>
                  </div>
                </form>
              </CardContent>
            </Card>
          </div>
        </section>
      )}

      {/* Reviews Section */}
      <section className="py-16 px-4">
        <div className="max-w-4xl mx-auto">
          <h2 className="text-3xl font-bold text-center mb-12 text-primary">
            –û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            {reviews.map((review, index) => (
              <Card key={index}>
                <CardContent className="pt-6">
                  <div className="flex mb-4">
                    {[...Array(review.rating)].map((_, i) => (
                      <Icon key={i} name="Star" size={20} className="text-yellow-400 fill-current" />
                    ))}
                  </div>
                  <p className="text-muted-foreground mb-4 italic">"{review.text}"</p>
                  <p className="font-semibold text-primary">{review.name}</p>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Contact Footer */}
      <footer className="bg-primary text-primary-foreground py-12 px-4">
        <div className="max-w-4xl mx-auto text-center">
          <h3 className="text-2xl font-bold mb-6">–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏</h3>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <div>
              <Icon name="Phone" size={24} className="mx-auto mb-2" />
              <p className="font-semibold">–¢–µ–ª–µ—Ñ–æ–Ω</p>
              <p>+7 (XXX) XXX-XX-XX</p>
            </div>
            <div>
              <Icon name="MapPin" size={24} className="mx-auto mb-2" />
              <p className="font-semibold">–ê–¥—Ä–µ—Å</p>
              <p>–î–µ—Ä–µ–≤–Ω—è –¢—Ä–∞–¥–∏—Ü–∏–∏, –¥. 15</p>
            </div>
            <div>
              <Icon name="Clock" size={24} className="mx-auto mb-2" />
              <p className="font-semibold">–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã</p>
              <p>–ï–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 8:00 –¥–æ 20:00</p>
            </div>
          </div>
          <div className="mt-8 pt-8 border-t border-primary-foreground/20">
            <p>&copy; 2024 –§–µ—Ä–º–µ—Ä—Å–∫–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ "–†—É—Å—Å–∫–∏–µ —Ç—Ä–∞–¥–∏—Ü–∏–∏"</p>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Index;